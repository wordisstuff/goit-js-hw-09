{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAGMC,EAAOC,SAASC,cAAc,SAiBpC,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACaC,KAAKC,SAAW,GAEpCJ,EAAQK,EAAAd,GAASe,OAAOC,QAAQ,uBAAwCC,OAAfX,EAAS,QAAYW,OAANV,EAAM,QAE5EG,EAAKI,EAAAd,GAASe,OAAOG,QAAQ,sBAAqCD,OAAfX,EAAS,QAAYW,OAANV,EAAM,O,GAE3EA,E,IAzBPL,EAAKiB,iBAAiB,UAAU,SAACC,GAC/BA,EAAMC,iBAMN,IALA,IAAMd,EAAQe,SAASpB,EAAKqB,SAAShB,MAAMiB,OACrCC,EAAOH,SAASpB,EAAKqB,SAASE,KAAKD,OACnCE,EAASJ,SAASpB,EAAKqB,SAASG,OAAOF,OACvCG,EAAW,GAERC,EAAI,EAAGA,EAAIF,EAAQE,IAAK,CAC/B,IAAMC,EAAUxB,EAAcuB,EAAI,EAAGrB,EAAQqB,EAAIH,GACjDE,EAASG,KAAKD,E,CAEhBrB,QAAQuB,IAAIJ,GACTK,MAAK,SAAAC,G,OAAWC,QAAQC,IAAIF,E,IAC5BG,OAAM,SAAAC,G,OAASH,QAAQC,IAAIE,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\n\nconst form = document.querySelector('.form');\nform.addEventListener('submit', (event) => {\n  event.preventDefault();\n  const delay = parseInt(form.elements.delay.value);\n  const step = parseInt(form.elements.step.value);\n  const amount = parseInt(form.elements.amount.value);\n  const promises = [];\n\n  for (let i = 0; i < amount; i++) {\n    const promise = createPromise(i + 1, delay + i * step);\n    promises.push(promise);\n  }\n  Promise.all(promises)\n    .then(results => console.log(results))\n    .catch(error => console.log(error));\n});\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve(Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`));\n      } else {\n        reject(Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`));\n      }\n    }, delay);\n  });\n}"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","$parcel$interopDefault","Notify","success","concat","failure","addEventListener","event","preventDefault","parseInt","elements","value","step","amount","promises","i","promise","push","all","then","results","console","log","catch","error"],"version":3,"file":"03-promises.471928a0.js.map"}